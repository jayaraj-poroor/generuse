[group test]
[import test2 from:"test"]
[usecase open-browser]
[pre-condition let count = 0]
[actors user system]
#open browser.
let count + 1 be z.
update! count with: z.

[usecase start-inc priority:"high" status:"complete"]
[pre-condition let (count >= 0) and (count <= 5)]
[actors user system]
let count + 1 be y.
update! count with: y.
log "after: " + count + ", before: " + before-inc's b.
[branch let count < 2]
log "count < 2".
[branch let count >= 2]
log "count > 2".

[usecase continue-inc priority:"high" status:"complete"]
[pre-condition let (count > 5) and (count <= 10)]
[actors user system]
inc-by count with delta: 2 giving z.
[do inc-and-check with x:2]
log "done!".

[usecase inc-and-check x]
[actors user system]
let x + 1 be y.
#[do inc-and-check with x: y]
[do inc-and-check2 with v: y]
log "inc-and-check: " + y.

[action inc-by delta]
[object c continue-inc:count]
#inc-by2 c giving z;
let c + delta giving z;
update! c with: z;
log "c: " + c.


[action inc-by2]
[object d inc-by:c]
let d + 2.

[state before-inc usecase:start-inc]
[needs y]
let count be a.
let count + 1 be b.

